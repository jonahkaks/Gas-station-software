cur.execute("CREATE TRIGGER {0}_log AFTER INSERT ON {1} BEGIN "
                "INSERT INTO {2}(date, branchid, debit, credit, details)"
                " SELECT date, branchid, debit, credit, '{1}'"
                " FROM {1} WHERE id=(SELECT MAX(id) FROM {1}); "
                "INSERT INTO Cash(date, branchid, debit, credit, details) "
          "SELECT date, branchid, credit, debit, '{1}' FROM {1}"
          " WHERE id=(SELECT MAX(id) FROM {1}); END;".format(table.lower(), table, super_table))


CREATE TRIGGER bik_log after INSERT ON fuel begin insert or ignore into
Cash(date, branchid, details, debit, credit) select branchid, "fuel",
amount, 0 from Bik WHERE id =(SELECT MAX(id) FROM Bik);end;

CREATE TRIGGER bik_stock_log after INSERT ON fuel begin insert or ignore into
Stock(date, branchid, details, debit, credit) select branchid, "fuel",
0, amount from Bik WHERE id =(SELECT MAX(id) FROM Bik);end;

CREATE TRIGGER ago_log after INSERT ON fuel begin insert or ignore into
Cash(date, branchid, details, debit, credit) select branchid, "fuel",
amount, 0 from Ago WHERE id =(SELECT MAX(id) FROM Ago);end;

CREATE TRIGGER ago_stock_log after INSERT ON fuel begin insert or ignore into
Stock(date, branchid, details, debit, credit) select branchid, "fuel",
0, amount from Ago WHERE id =(SELECT MAX(id) FROM Ago);end;

CREATE TRIGGER pms_log after INSERT ON fuel begin insert or ignore into
Cash(date, branchid, details, debit, credit) select branchid, "fuel",
amount, 0 from Pms WHERE id =(SELECT MAX(id) FROM Pms);end;

CREATE TRIGGER pms_stock_log after INSERT ON fuel begin insert or ignore into
Stock(date, branchid, details, debit, credit) select branchid, "fuel",
0, amount from Pms WHERE id =(SELECT MAX(id) FROM Pms);end;


CREATE VIEW Ago as select fuel.fuelid as id, prices.branchid as branchid,
 fuel.date as date, fuel.product as product,
 (fuel.closing_meter-(fuel.opening_meter+fuel.rtt)) as litres,
 (fuel.closing_meter-(fuel.opening_meter+fuel.rtt))*prices.ago
 as amount from fuel, prices where fuel.branchid=prices.branchid
 and fuel.date>=prices.start_date and fuel.date<prices.stop_date and fuel.product='AGO';

 CREATE VIEW Pms as select fuel.fuelid as id, prices.branchid as branchid,
 fuel.date as date, fuel.product as product,
 (fuel.closing_meter-(fuel.opening_meter+fuel.rtt)) as litres,
 (fuel.closing_meter-(fuel.opening_meter+fuel.rtt))*prices.ago
 as amount from fuel, prices where fuel.branchid=prices.branchid
 and fuel.date>=prices.start_date and fuel.date<prices.stop_date and fuel.product='PMS';

 CREATE VIEW Bik as select fuel.fuelid as id, prices.branchid as branchid,
 fuel.date as date, fuel.product as product,
 (fuel.closing_meter-(fuel.opening_meter+fuel.rtt)) as litres,
 (fuel.closing_meter-(fuel.opening_meter+fuel.rtt))*prices.ago
 as amount from fuel, prices where fuel.branchid=prices.branchid
 and fuel.date>=prices.start_date and fuel.date<prices.stop_date and fuel.product='Bik'; and fuel.date>=prices.start_date and fuel.date<prices.stop_date and fuel.product='Bik';